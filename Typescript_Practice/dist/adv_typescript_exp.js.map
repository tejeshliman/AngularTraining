{"version":3,"file":"adv_typescript_exp.js","sourceRoot":"","sources":["file:///C:/Angular Training/AngTraining_Repo/src/adv_typescript_exp.ts"],"names":[],"mappings":"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","sourcesContent":["// This keyword Scopes\r\n// Global this\r\nfunction GlobalFunctionThisScope() {\r\n  console.log(\"GlobalFunctionThisScope::\", this);\r\n}\r\n\r\nGlobalFunctionThisScope();\r\n\r\n// Const method this\r\nconst ConstFunctionThisScope = {\r\n  myMethod() {\r\n    console.log(\"ConstFunctionThisScope::\", this);\r\n  },\r\n};\r\n\r\nConstFunctionThisScope.myMethod();\r\n\r\n// class method this\r\nclass ClassForThisScope {\r\n  myMethod() {\r\n    console.log(\"ClassForThisScope::\", this);\r\n  }\r\n}\r\n\r\nconst classForThisScopeObj = new ClassForThisScope();\r\nclassForThisScopeObj.myMethod();\r\n\r\n//Exploring “this” with .call, .apply and .bind\r\n// Object Litteral\r\nconst MyObj = {\r\n  myMethod() {\r\n    console.log(\"Object::\", this);\r\n  },\r\n};\r\n\r\n//MyObj.myMethod();\r\n//Call need to pass params as comma separated, Apply need to pass parameters as Array\r\n// Function\r\nfunction MyFunction(arg1: string, arg2: string) {\r\n  console.log(\"Funcion::\", this, arg1, arg2);\r\n}\r\n\r\nMyFunction(\"arg1\", \"arg2\");\r\nMyFunction.call(MyObj, \"arg1\", \"arg2\");\r\nMyFunction.apply(MyObj, [\"arg1\", \"arg2\"]);\r\n\r\n// TypescriptFunction with rest parameters\r\nfunction MyFunctionWithRestPar(...text: string[]) {\r\n  console.log(\"Funcion::\", this, text);\r\n}\r\n\r\nMyFunctionWithRestPar(\"arg1\", \"arg2\");\r\nMyFunctionWithRestPar.call(MyObj, \"arg1\", \"arg2\");\r\nMyFunctionWithRestPar.apply(MyObj, [\"arg1\", \"arg2\"]);\r\n\r\nconst bindFunction = MyFunctionWithRestPar.bind(MyObj);\r\nbindFunction(\"arg1\", \"arg2\");\r\nbindFunction(\"1\", \"3\");\r\nbindFunction(\"arg1\", \"arg2\");\r\n\r\n// Arrow Functions and Lexical Scope\r\nclass ArrayFunctionClass {\r\n  myMethod() {\r\n    const test = 123;\r\n    // Sets this scope as scope of class\r\n    console.log(\"1\", this);\r\n\r\n    setTimeout(function () {\r\n      // Lexical scope - test is available becuase lexical scope in this new scope\r\n      console.log(test);\r\n      console.log(\"2\", this);\r\n    }, 0);\r\n\r\n    setTimeout(() => {\r\n      // with array function, it not binds the this to method so scope of this will not be changed. It does inherit this value\r\n      console.log(\"3\", this);\r\n    }, 0);\r\n  }\r\n}\r\n\r\nconst instance = new ArrayFunctionClass();\r\ninstance.myMethod();\r\n\r\n// Typing “this” and “noImplicitThis”\r\n// Pass this type with first parameter\r\nconst elem = document.querySelector(\".click\");\r\n\r\nfunction handleClick(this: HTMLAnchorElement, eventName: Event) {\r\n  eventName.preventDefault();\r\n  console.log(this.className);\r\n}\r\n\r\nelem.addEventListener(\"click\", handleClick, false);\r\n\r\n//“typeof” Type Queries\r\ntypeof \"\";\r\nconsole.log(typeof \"\");\r\n\r\nconst person = {\r\n  name: \"Todd\",\r\n  age: 25,\r\n};\r\n\r\ntype Person = typeof person;\r\n\r\nconst PersonExm: Person = {\r\n  name: \"John\",\r\n  age: 30,\r\n};\r\nconsole.log(PersonExm);\r\n\r\n// inline type of\r\nconst PersonInlineTypeOfExm: typeof person = {\r\n  name: \"John\",\r\n  age: 30,\r\n};\r\nconsole.log(PersonInlineTypeOfExm);\r\n\r\n//“keyof” Index Type Queries\r\nconst keyofperson = {\r\n  name: \"Todd\",\r\n  age: 25,\r\n};\r\ntype keyofPerson = typeof keyofperson;\r\n\r\n// Key of will return the keys with union type like type PersonKeys = \"name\" | \"age\"\r\ntype PersonKeys = keyof keyofPerson;\r\n\r\n// will return new unitype with actual data types not string eg. type PersonTypes = string | number\r\n\r\ntype PersonTypes = keyofPerson[PersonKeys];\r\n\r\n//“keyof”, Generics and Lookup Types\r\nfunction getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n  return obj[key];\r\n}\r\n\r\nconst personame = getProperty(person, \"name\");\r\nconsole.log(personame);\r\n\r\n//“Readonly” Mapped Type\r\n\r\ninterface readonlyExpInterface {\r\n  name: string;\r\n  age: number;\r\n}\r\n\r\nconst readonlyMappingClass: readonlyExpInterface = {\r\n  name: \"test\",\r\n  age: 25,\r\n};\r\n\r\nfunction freeze(person: readonlyExpInterface) {\r\n  // Freeze will make all props as Readonly\r\n  return Object.freeze(person);\r\n}\r\nconst newObj = freeze(readonlyMappingClass);\r\nconsole.log(newObj);\r\n\r\nfunction freezeasGenerics<T>(obj: T): Readonly<T> {\r\n  // Freeze will make all props as Readonly\r\n  return Object.freeze(obj);\r\n}\r\n\r\nconst newObj1 = freezeasGenerics(readonlyMappingClass);\r\nconsole.log(newObj1);\r\n\r\ntype MyReadonly<T> = {\r\n  readonly [P in keyof T]: T[P];\r\n};\r\n\r\nfunction freezeasWithCustomReadonly<T>(obj: T): MyReadonly<T> {\r\n  // Freeze will make all props as Readonly\r\n  return Object.freeze(obj);\r\n}\r\nconst newObj3 = freezeasWithCustomReadonly(readonlyMappingClass);\r\nconsole.log(newObj3);\r\n\r\n// “Partial” Mapped Type\r\ninterface partialExpInterface {\r\n  name: string;\r\n  age: number;\r\n}\r\n\r\nfunction updatePersonClass(person: partialExpInterface, prop: any) {\r\n  return { ...person, ...prop };\r\n}\r\n\r\nconst em: partialExpInterface = {\r\n  name: \"todd\",\r\n  age: 30,\r\n};\r\nconsole.log(em);\r\nconst updated = updatePersonClass(em, { name: \"John\" });\r\nconsole.log(updated);\r\n\r\ntype MyPartial<T> = {\r\n  [P in keyof T]?: T[P];\r\n};\r\n\r\nfunction updatePersonClassWithPartial(\r\n  person: partialExpInterface,\r\n  prop: MyPartial<partialExpInterface>\r\n) {\r\n  return { ...person, ...prop };\r\n}\r\nconst updatedwith = updatePersonClassWithPartial(em, { name: \"Leo\" });\r\nconsole.log(updatedwith);\r\n\r\n// “Required” Mapped Type, +/- Modifiers\r\ninterface RequiredExpInterface {\r\n  name: string;\r\n  age?: number;\r\n}\r\n\r\n// type MyRequired<T> = {\r\n//   [P in keyof T]-?: T[P];\r\n// };\r\n\r\n// function printAge(obj: Required<RequiredExpInterface>) {\r\n//   return `${obj.name} is ${obj.age}`;\r\n// }\r\n// const reqEx: Required<RequiredExpInterface> = {\r\n//   name: \"todd\",\r\n//   age: 27,\r\n// };\r\n\r\n// console.log(printAge(reqEx));\r\n\r\n// “Pick” Mapped Type : Can give few props from object\r\ninterface PickExpInterface {\r\n  name: string;\r\n  age: number;\r\n  address: {};\r\n}\r\n\r\ntype MyPick<T, K extends keyof T> = {\r\n  [P in K]: T[P];\r\n};\r\n\r\nconst pickex: Pick<PickExpInterface, \"name\" | \"age\"> = {\r\n  name: \"todd\",\r\n  age: 30,\r\n};\r\n\r\nconsole.log(pickex);\r\n\r\n//“Record” Mapped Type\r\n// with dictionary\r\nlet dictionary: { [key: string]: any } = {};\r\n\r\ninterface TrackStatus {\r\n  current: string;\r\n  next: string;\r\n}\r\n\r\nconst songTrack: TrackStatus = {\r\n  current: \"test\",\r\n  next: \"7686\",\r\n};\r\n\r\ndictionary[0] = songTrack;\r\n//console.log(dictionary[0]);\r\n\r\n// With Record\r\nlet recorddictionary: Record<string, TrackStatus> = {};\r\n\r\nconst item: Record<keyof TrackStatus, string> = {\r\n  current: \"test\",\r\n  next: \"7686\",\r\n};\r\n\r\nrecorddictionary[0] = item;\r\nconsole.log(recorddictionary[0]);\r\n// with typeof\r\nlet typeofrecorddictionary: Record<string, typeof item> = {};\r\ntypeofrecorddictionary[0] = item;\r\nconsole.log(typeofrecorddictionary[0]);\r\n\r\n/* “typeof” and Type Guards  - If one type identified TS automatically idetify second type from pipe*/\r\nfunction typeOFEX(bar: string | number) {\r\n  if (typeof bar === \"string\") {\r\n    console.log(bar.toUpperCase());\r\n    return bar.toUpperCase();\r\n  }\r\n  console.log(bar.toFixed(2));\r\n  return bar.toFixed(2);\r\n}\r\ntypeOFEX(\"test\");\r\ntypeOFEX(125.255);\r\n\r\n//\r\nclass Song {\r\n  constructor(public title: string, public duration: string | number) {}\r\n}\r\n\r\nfunction getSongDur(item: Song) {\r\n  if (typeof item.duration === \"string\") {\r\n    return item.duration;\r\n  }\r\n  const { duration } = item;\r\n  const min = Math.floor(duration / 60000);\r\n  const sec = (duration / 1000) % 60;\r\n  return `${min}:${sec}`;\r\n}\r\n\r\nconst songDurFromString = getSongDur(new Song(\"test\", \"05:51\"));\r\nconsole.log(songDurFromString);\r\n\r\nconst songDurFromMS = getSongDur(new Song(\"test\", 90000));\r\nconsole.log(songDurFromMS);\r\n\r\n/*  3 ways for function*/\r\nclass oneway {\r\n  bar() {}\r\n}\r\n\r\nfunction twoway() {}\r\n\r\ntwoway.prototype.bar = function () {};\r\n\r\n/* “instanceof” and Type Guards */\r\nclass Foo {\r\n  bar() {}\r\n}\r\n\r\nconst bar = new Foo();\r\n\r\nconsole.log(Object.getPrototypeOf(bar) === Foo.prototype);\r\nconsole.log(bar instanceof Foo);\r\n\r\nclass SongNew {\r\n  kind: \"song\";\r\n  constructor(public title: string, public duration: number) {}\r\n}\r\n\r\nclass PlayLIst {\r\n  kind: \"playlist\";\r\n  constructor(public name: string, public songs: SongNew[]) {}\r\n}\r\n\r\nfunction getItemName(item: SongNew | PlayLIst) {\r\n  if ((item as SongNew).title) {\r\n    return (item as SongNew).title;\r\n  }\r\n  return (item as PlayLIst).name;\r\n}\r\n\r\nconst songNme = getItemName(new SongNew(\"mysong\", 30000));\r\nconsole.log(\"SongName\", songNme);\r\n\r\nconst playlistName = getItemName(\r\n  new PlayLIst(\"playlist1\", [new SongNew(\"mysong2\", 30000)])\r\n);\r\nconsole.log(\"PlaylistName\", playlistName);\r\n\r\n/* Use Instaceof */\r\nfunction getItemNameUsingInstance(item: SongNew | PlayLIst) {\r\n  if (item instanceof SongNew) {\r\n    return item.title;\r\n  }\r\n  return item.name;\r\n}\r\n\r\nconsole.log(\r\n  \"SongName\",\r\n  getItemNameUsingInstance(new SongNew(\"mysong2\", 30000))\r\n);\r\n\r\nconsole.log(\r\n  \"PlaylistName\",\r\n  getItemNameUsingInstance(\r\n    new PlayLIst(\"playlist2\", [new SongNew(\"mysong3\", 30000)])\r\n  )\r\n);\r\n\r\n/* User Defined Type Guards  */\r\n// we can use only for return boolean not other types\r\nfunction isSong(item: any): item is SongNew {\r\n  return item instanceof SongNew;\r\n}\r\n\r\nfunction getItemNameUsinguserdefinedTypeGuard(item: SongNew | PlayLIst) {\r\n  if (isSong(item)) {\r\n    return item.title;\r\n  }\r\n  return item.name;\r\n}\r\n\r\n/* Literal Type Guards and “in” Operator */\r\nconst exists = \"localStorage\" in window;\r\nconsole.log(exists);\r\n\r\nconst Inexp: string = \"bar\";\r\n\r\nfunction isSongWithIn(item: any): item is SongNew {\r\n  return \"title\" in item;\r\n}\r\n\r\nfunction getItemNameUsingKindStringLiteral(item: SongNew | PlayLIst) {\r\n  if (item.kind === \"song\") {\r\n    return item.title;\r\n  }\r\n  return item.name;\r\n}\r\n\r\n/* Intersection Types */\r\ninterface MyOrder {\r\n  id: string;\r\n  currency: string;\r\n  amount: number;\r\n}\r\n\r\ninterface Stripe {\r\n  type: \"stripe\";\r\n  card: string;\r\n  cvc: string;\r\n}\r\n\r\ninterface Paypal {\r\n  type: \"paypal\";\r\n  email: string;\r\n}\r\n\r\ntype CheckOutWithCard = MyOrder & Stripe;\r\ntype CheckOutWithPayPal = MyOrder & Paypal;\r\n\r\nconst myorder: MyOrder = {\r\n  id: \"ygdd\",\r\n  amount: 10,\r\n  currency: \"usd\",\r\n};\r\n\r\nconst withCard: CheckOutWithCard = {\r\n  ...myorder,\r\n  type: \"stripe\",\r\n  card: \"1111 5555 5555 6666\",\r\n  cvc: \"123\",\r\n};\r\n\r\nconst withPaypal: CheckOutWithPayPal = {\r\n  type: \"paypal\",\r\n  ...myorder,\r\n  email: \"123@.com\",\r\n};\r\n\r\nconsole.log(withCard);\r\nconsole.log(withPaypal);\r\n\r\n// another way to merge object is Use Object Assign - It internally used &\r\nconst assigned = Object.assign({}, myorder, withCard);\r\nconsole.log(assigned);\r\n\r\n/* Discriminated (Tagged) Unions */\r\n\r\ntype Payload = CheckOutWithCard | CheckOutWithPayPal;\r\nfunction checkout(payload: Payload) {\r\n  if (payload.type === \"stripe\") {\r\n    console.log(payload.card, payload.cvc);\r\n  }\r\n  if (payload.type === \"paypal\") {\r\n    console.log(payload.email);\r\n  }\r\n}\r\n\r\ncheckout(withCard);\r\ncheckout(withPaypal);\r\n\r\n/* Interfaces vs Type Aliases */\r\n// We can not extend types\r\n\r\ninterface Songitem {\r\n  name: string;\r\n}\r\n\r\ninterface Artist extends Songitem {\r\n  songs: number;\r\n}\r\n\r\ninterface Artist {\r\n  getSongs(): number;\r\n}\r\n\r\n/* We can declare multiple interfaces with same name but we need to provide all props while using it i.e. we need to merge decoratos\r\n// we can not have types with same name */\r\n\r\ntype Artist2 = { name: string } & Songitem;\r\n\r\nconst newArtist: Artist = {\r\n  name: \"abc\",\r\n  songs: 5,\r\n  getSongs() {\r\n    return this.songs;\r\n  },\r\n};\r\n\r\n/* Interfaces vs Classes */\r\n/* Just check type checking - Use interface\r\nto provide implementation : Use classes \r\nInterface: we can not cretae instance for class we can */\r\n\r\ninterface IArt {\r\n  name: string;\r\n}\r\n\r\nfunction artFactory({ name }: IArt) {\r\n  return new ArtCreator(name);\r\n}\r\n\r\nclass ArtCreator implements IArt {\r\n  constructor(public name: string) {}\r\n}\r\n\r\nconsole.log(artFactory({ name: \"todd\" }));\r\n\r\n/* Function Generics */\r\nclass List {\r\n  private list: any[] = [];\r\n\r\n  addItem(item: any): void {\r\n    this.list.push(item);\r\n  }\r\n\r\n  getList(): any[] {\r\n    return this.list;\r\n  }\r\n}\r\n\r\nconst list = new List();\r\nlist.addItem(\"test\");\r\nconsole.log(list.getList());\r\n\r\nclass mobile {\r\n  constructor(private name: string, private price: number) {}\r\n}\r\nlist.addItem(new mobile(\"Redmi\", 20000));\r\nconsole.log(list.getList());\r\n\r\n// Generics Example\r\n\r\nclass GenericListClass<T> {\r\n  private list: T[] = [];\r\n\r\n  addItem(item: T): void {\r\n    this.list.push(item);\r\n  }\r\n\r\n  getList(): T[] {\r\n    return this.list;\r\n  }\r\n}\r\nconst genericList = new GenericListClass<mobile>();\r\ngenericList.addItem(new mobile(\"Redmi\", 20000));\r\nconsole.log(genericList.getList());\r\n\r\n/* Function Overloads  */\r\n\r\n//Below 2 are just for doc\r\nfunction reverse(str: string): string;\r\nfunction reverse<T>(arr: T[]): T[];\r\n\r\n//Below is actual implementation, In Js there will not be 2 function names with same name\r\nfunction reverse<T>(stringOrArray: string | T[]): string | T[] {\r\n  if (typeof stringOrArray === \"string\") {\r\n    return stringOrArray.split(\"\").reverse().join(\"\");\r\n  }\r\n  return stringOrArray.slice().reverse();\r\n}\r\n\r\nconsole.log(reverse(\"Test\"));\r\nconsole.log(reverse([\"11\", \"2\"]));\r\n\r\n/* Numeric Enums and Reverse Mappings */\r\nenum Sizes {\r\n  small,\r\n  medium,\r\n  large,\r\n}\r\n\r\nenum Sizes {\r\n  extraLarge = 3,\r\n}\r\n\r\nconsole.log(Sizes.medium);\r\nconsole.log(Sizes[0]);\r\nconsole.log(Sizes[Sizes.large], Sizes[Sizes.extraLarge]);\r\n\r\n/*  String Enums and Inlining Members  */\r\nenum SizesString {\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n//console.log(SizesString[SizesString.Small]);\r\n\r\nlet selected: SizesString = SizesString.Small;\r\nfunction updateSize(size: SizesString): void {\r\n  selected = size;\r\n}\r\nconsole.log(selected);\r\nupdateSize(SizesString.Large);\r\nconsole.log(selected);\r\n\r\n/*  Add Const before enum to avoid the js code generation but skip when we want to use enum multiple places */\r\nconst enum ConstSizes {\r\n  small,\r\n  medium,\r\n  large,\r\n}\r\n\r\n/* DefinitelyTyped and @types */\r\n/* DefinitelyTyped is a must have resource for any TypeScript developer. It’s essentially documentation (well, *.d.ts files) for most JavaScript packages available out there in the open source community.\r\n\r\nThis means when you next install a third-party package, you’ll also want to install the type declaration files as well. Doing so will open up typed-everything (autocompletion, spell checks, IDE support and so on). From jQuery and lodash through to front-end frameworks, you can be sure have the full power of TypeScript behind them.\r\n\r\nIt’s also a community-driven project, should ever need to send a PR (Pull Request) to add any new typings! */\r\n\r\n/* To skip any files like test files . Files takes precedence then exclude then include */\r\n"]}